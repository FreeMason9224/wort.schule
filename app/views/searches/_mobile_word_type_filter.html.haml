.md:hidden
  - word_type = (params.dig(:filterrific, :filter_type).presence || :all).to_sym.clamped([:all, :Noun, :Verb, :Adjective, :FunctionWord])

  .p-6.pb-0.flex.items-center.justify-between
    = t('filter.results.all', count: number_with_delimiter(@counts[:all]))

    .text-black.px-3.py-2
      .relative(data-controller="dropdown reveal")
        .inline-block.select-none(data-action="click->dropdown#toggle click@window->dropdown#hide click->reveal#toggle" role="button" data-dropdown-target="button" tabindex="0")
          %span.appearance-none.flex.items-center.inline-block.gap-1
            - if word_type == :all
              = t('filter.results.all_results')
            - else
              - word_class = word_type.to_s.constantize
              = word_class.model_name.human(count: 2)
            = heroicon 'chevron-down'

        .absolute.right-0.mt-2.hidden.z-50(data-dropdown-target="menu")
          .shadow.rounded-md.border.overflow-hidden.bg-white
            = render WordTypeDropdownItemComponent.with_collection([:all, Noun, Verb, Adjective, FunctionWord], counts: @counts)
