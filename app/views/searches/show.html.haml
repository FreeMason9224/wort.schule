= form_for_filterrific @filterrific, html: { data: { turbo_frame: 'words_filter', turbo_action: 'advance', controller: 'form-submission filter' } } do |f|
  = hidden_field_tag :is_filter_open, params[:is_filter_open]

  .content.pb-0
    .md:my-10.mx-auto(class="lg:max-w-[50vw]")
      .flex.flex-wrap.gap-4.justify-center.items-end.px-8.md:py-8
        .flex-grow
          = render OmniSearchFieldComponent.new(form: f, words: @words, on_search_page: true)
        %div
          - unless @is_filter_open
            = link_to url_for(request.params.merge(is_filter_open: !@is_filter_open)), class: 'button' do
              .flex.items-center.gap-1
                = heroicon 'sparkles'
                = t('filter.open')

    = render 'mobile_word_type_filter', f:
    = render 'desktop_word_type_filter', f:

  .bg-gray-background.border-t-4.border-primary.md:border-t.md:border-gray-border
    .pt-0.flex.flex-col.md:flex-row
      %div(class="md:min-w-[25rem] md:max-w-[30vw] #{@is_filter_open ? '' : 'hidden'}")
        = render 'filters/form', f:
      .p-6.pt-0.grow
        = render 'words/index', words: @words

.content
  = turbo_frame_tag :add_words_to_list do
    = render 'filters/add_to_list'
