.mt-6.ci-filter(data-controller="reveal")
  %button.flex.ml-4.md:ml-0.mb-2.link.items-center.gap-1(data-action="click->reveal#toggle")
    = heroicon 'chevron-right', options: { class: 'hidden', 'data-reveal-target': 'item' }
    = heroicon 'chevron-down', options: { 'data-reveal-target': 'item' }
    = t('filter.title')

  %div{data: { reveal_target: 'item' }}
    = box do
      %div= t 'filter.word_contains'
      .flex.gap-2
        = filter_text_field f, :wordstarts, inline: true, label: false, placeholder: t('filter.wordstarts')
        = filter_text_field f, :wordcontains, inline: true, label: false, placeholder: t('filter.wordcontains')
        = filter_text_field f, :wordends, inline: true, label: false, placeholder: t('filter.wordends')
      .flex.gap-2.items-end
        = filter_text_field f, :syllablescontains
        = filter_text_field f, :letters
      = filter_select_field f, :source, collection: Source.order(:name).map { |s| [s.name, s.id] }
      = filter_select_field f, :topic, collection: Topic.order(:name).map { |t| [t.name, t.id] }
      = filter_select_field f, :hierarchy, collection: Hierarchy.order(:name).map { |h| [h.name, h.id] }
      = filter_text_field f, :consonant_vowel, placeholder: 'KVVK', style: 'text-transform: uppercase'
      = filter_select_field_with_and_or f, :phenomenons, collection: Phenomenon.as_collection
      = filter_select_field_with_and_or f, :strategies, collection: Strategy.as_collection
      = filter_select_field_with_and_or f, :keywords, collection: Word.as_collection
      = filter_check_box_field f, :foreign
      = filter_check_box_field f, :prototype
      = filter_check_box_field f, :compound
      = filter_check_box_field f, :example_sentences

      .mt-2.md:col-span-3
        .hidden(data-filter-target="noun")
          .md:grid.md:grid-cols-3.md:gap-2
            = render "filters/noun", f:
        .hidden(data-filter-target="verb")
          .md:grid.md:grid-cols-3.md:gap-2
            = render "filters/verb", f:
        .hidden(data-filter-target="adjective")
          .md:grid.md:grid-cols-3.md:gap-2
            = render "filters/adjective", f:

      .mt-2
        .flex.gap-2
          = button_tag t('filter.apply'), type: 'submit', class: 'sr-only', title: t('filter.apply')
          = link_to reset_filterrific_url, class: 'button mt-4' do
            .flex.gap-2
              = heroicon 'x-mark'
              = t('filter.reset')
