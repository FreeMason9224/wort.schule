- if @mode.show_panel?
  %div(class="md:min-w-[25rem] md:max-w-[30vw]")
    .ci-filter.p-5.bg-gray-background-highlight
      .flex.flex-wrap.gap-2.justify-center
        = link_to url_for(params.permit!.merge(mode: :omni)), class: 'flex mb-6 button items-center gap-1', 'data-turbo-frame': '_top' do
          = heroicon 'x-mark'
          = t('filter.close')
        = link_to t('filter.reset'), reset_filterrific_url(mode: :advanced), class: 'flex mb-6 button items-center gap-1', 'data-turbo-frame': '_top'

      %div= t 'filter.word_contains'
      .flex.gap-2
        = filter_text_field f, :wordstarts, inline: true, label: false, placeholder: t('filter.wordstarts')
        = filter_text_field f, :wordcontains, inline: true, label: false, placeholder: t('filter.wordcontains')
        = filter_text_field f, :wordends, inline: true, label: false, placeholder: t('filter.wordends')
      .mt-4
      = filter_text_field f, :syllablescontains
      = render partial: 'filters/topics'
      = render partial: 'filters/hierarchies'
      = render partial: 'filters/keywords'

      .mt-4
        - unless @mode.show_power_options?
          = link_to t('filter.more'), url_for(params.permit!.merge(mode: :power)), class: 'button', 'data-turbo': false

        - if @mode.show_power_options?
          = filter_text_field f, :letters
          = render partial: 'filters/sources'
          = filter_text_field f, :consonant_vowel, placeholder: 'KVVK', style: 'text-transform: uppercase', oninput: "this.value = this.value.replace(/[^KVkv]/, '')"
          = filter_select_field_with_and_or :phenomenons, collection: Phenomenon.as_collection
          = filter_select_field_with_and_or :strategies, collection: Strategy.as_collection
          = filter_check_box_field f, :foreign
          = filter_check_box_field f, :prototype
          = filter_check_box_field f, :compound
          = filter_check_box_field f, :example_sentences
          = filter_check_box_field f, :images

          .mt-4
            - if @filter_type == "Noun"
              .flex.flex-col.gap-1
                = render "filters/noun", f:
            - if @filter_type == "Verb"
              .flex.flex-col.gap-1
                = render "filters/verb", f:
            - if @filter_type == "Adjective"
              .flex.flex-col.gap-1
                = render "filters/adjective", f:

          .mt-4
            = link_to t('filter.less'), url_for(params.permit!.merge(mode: :advanced)), class: 'button', 'data-turbo': false

      = button_tag t('filter.apply'), type: 'submit', class: 'sr-only', title: t('filter.apply')
