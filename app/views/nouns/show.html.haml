.grid.md:grid-cols-2.gap-12
  = render WordHeaderComponent.new(word: @noun) do |component|
    - component.with_title do
      %h1.flex.items-baseline.gap-1.m-0
        - if @noun.genus.present?
          .text-2xl.md:text-3xl.font-normal= @noun.article_definite(case_number: 1, singular: true)
        = @noun.name

    - component.with_property do
      = render LabeledValueComponent.new(label: Noun.human_attribute_name(:plural), value: @noun.plural)
    - component.with_property do
      = render LabeledValueComponent.new(label: Noun.human_attribute_name(:genus_id), value: @noun.genus&.name)

  = render BoxComponent.new(title: t('words.show.properties')) do
    = render BoxGridComponent.new do
      %div= Word.human_attribute_name(:type)
      %div= @noun.class.model_name.human

      .md:hidden= Noun.human_attribute_name(:plural)
      .md:hidden= @noun.plural

      .md:hidden= Noun.human_attribute_name(:genus_id)
      .md:hidden= @noun.genus&.name

      %div= Noun.human_attribute_name(:singularetantum)
      %div= @noun.singularetantum&.humanize

      %div= Noun.human_attribute_name(:pluraletantum)
      %div= @noun.pluraletantum&.humanize


= render "words/more_meanings", word: @noun

= two_column_card t('words.show.noun.title'), t('words.show.noun.description'), first: true do
  = box padding: false do
    = box_description_list do |list|
      = render(list.add(Noun.human_attribute_name(:genus_neuter))) do
        = @noun.genus_neuter&.name
      = render(list.add(Noun.human_attribute_name(:genus_masculine))) do
        = @noun.genus_masculine&.name
      = render(list.add(Noun.human_attribute_name(:genus_feminine))) do
        = @noun.genus_feminine&.name


- if any_present?(@noun, (1..4).map { |index| ["case_#{index}_singular", "case_#{index}_plural"] }.flatten)
  = two_column_card t('words.show.cases.title'), t('words.show.cases.description') do
    = box padding: false do
      = box_description_list do |list|
        - (1..4).each do |index|
          - case_label = capture do
            = content_tag :div do
              = content_tag :div, Noun.human_attribute_name("case_#{index}".to_sym)
              = content_tag :div, Noun.human_attribute_name("case_#{index}_question".to_sym), class: 'text-sm text-gray-400'

          = render(list.add(case_label)) do
            .w-full.grid.grid-cols-2
              %div
                .flex.gap-1
                  .text-sm.text-gray-400= @noun.article_definite(case_number: index, singular: true)
                  = @noun.public_send("case_#{index}_singular")
                .text-sm.text-gray-400= t Noun.human_attribute_name(:singular)
              %div
                .flex.gap-1
                  .text-sm.text-gray-400= @noun.article_definite(case_number: index, singular: false)
                  = @noun.public_send("case_#{index}_plural")
                .text-sm.text-gray-400= t Noun.human_attribute_name(:plural)

= render 'example_sentences/list', word: @noun

= render 'words/general', word: @noun

= render 'shared/versions', model: @noun

.pagination-with-actions
  = link_to t('actions.edit'), [:edit, @noun], data: { turbo_frame: '_top' }, class: 'button primary' if can?(:edit, @noun)
