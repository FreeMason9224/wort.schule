.flex.flex-col.gap-y-12.md:grid.md:grid-cols-2.md:gap-12
  = render WordHeaderComponent.new(word: @noun, word_font: current_user&.word_font) do |component|
    - component.with_title do
      %h1.flex.items-baseline.gap-1.m-0
        - if @noun.genus.present?
          .text-2xl.md:text-3xl.font-normal= @noun.article_definite(case_number: 1, singular: true)
        = @noun.name

    - component.with_property do
      = render LabeledValueComponent.new(label: Noun.human_attribute_name(:plural), value: @noun.full_plural)
    - component.with_property do
      = render LabeledValueComponent.new(label: Noun.human_attribute_name(:genus_id), value: 'test') do
        .flex.gap-2.items-center
          - if @noun.genus&.symbol&.attached? && current_word_view_setting.show_gender_symbols
            = image_tag @noun.genus.symbol, class: 'max-w-6'
          = @noun.genus&.label(current_word_view_setting.genus_wording)

  = render BoxComponent.new(title: t('words.show.properties')) do
    = render BoxGridComponent.new do
      - if @noun.genus_neuter.present?
        %div= Noun.human_attribute_name(:genus_neuter)
        %div= @noun.genus_neuter&.name

      - if @noun.genus_masculine.present?
        %div= Noun.human_attribute_name(:genus_masculine)
        %div= @noun.genus_masculine&.name

      - if @noun.genus_feminine.present?
        %div= Noun.human_attribute_name(:genus_feminine)
        %div= @noun.genus_feminine&.name

      %div= Noun.human_attribute_name(:singularetantum)
      %div= @noun.singularetantum&.humanize

      %div= Noun.human_attribute_name(:pluraletantum)
      %div= @noun.pluraletantum&.humanize

  = render 'words/meaning', word: @noun
  = render 'nouns/cases'
  = render 'words/syntax', word: @noun
  = render 'words/lists', word: @noun
  = render 'example_sentences/list', word: @noun
  = render 'words/more_meanings', word: @noun
  = render 'words/relations', word: @noun
  = render 'shared/versions', model: @noun

.pagination-with-actions.mt-12
  = link_to t('actions.edit'), [:edit, @noun], data: { turbo_frame: '_top' }, class: 'button primary' if can?(:edit, @noun)
