= title_with_actions @learning_group.name do
  = link_to t('actions.edit'), edit_learning_group_path(@learning_group), class: 'button primary' if can? :edit, @learning_group
  = link_to t('.request_access'), requests_learning_group_learning_group_memberships_path(@learning_group), method: :post, class: 'button primary' if can?(:create, :learning_group_membership_requests) && !LearningGroupMembership.exists?(learning_group: @learning_group, user: current_user)

= two_column_card LearningGroup.model_name.human, "", first: true do
  = box padding: false do
    = box_description_list do |list|

      = render(list.add(LearningGroup.human_attribute_name(:name))) do
        = @learning_group.name
    
      = render(list.add(LearningGroup.human_attribute_name(:user))) do
        = link_to_if can?(:read, @learning_group.owner), @learning_group.owner, user_path(@learning_group.owner)
    
      - if can? :invite, @learning_group
        = render(list.add(t('learning_groups.invitation.title'))) do
          = render 'invitation', learning_group: @learning_group

- if can? :read_users, @learning_group
  = two_column_card User.model_name.human(count: 2), "" do
    = box padding: false do
      - if can? :create, LearningGroupMembership.new(learning_group: @learning_group)
        .px-4.py-5.flex.justify-end
          = link_to t('.assign_user'), new_learning_group_learning_group_membership_path(@learning_group), class: 'button primary'

      = box_description_list do |list|
        - @learning_group.learning_group_memberships.with_access(:requested, :granted).order(access: 'desc').each do |membership|
          %div{id: dom_id(membership.user)}
            = render(list.add(membership.user)) do
              %div
              - if can? :edit, membership
                .ml-4.flex-shrink-0
                  - if membership.access.granted?
                    = button_to t('actions.remove'), learning_group_learning_group_membership_path(@learning_group, membership), method: :delete, class: 'button'
                  - else
                    .flex.gap-1
                      = button_to t('.accept'), learning_group_learning_group_membership_requests_accept_path(@learning_group, membership), method: :post, class: 'button primary'
                      = button_to t('.reject'), learning_group_learning_group_membership_requests_reject_path(@learning_group, membership), method: :post, class: 'button'

- if can? :read_lists, @learning_group
  = two_column_card List.model_name.human(count: 2), "" do
    = box padding: false do
      - if can? :create, LearningPlea.new(learning_group: @learning_group)
        .px-4.py-5.flex.justify-end
          = link_to t('.assign_list'), new_learning_group_learning_plea_path(@learning_group), class: 'button primary'

      = box_description_list do |list|
        - @learning_group.learning_pleas.each do |learning_plea|
          %div{id: dom_id(learning_plea)}
            - link_to_list = link_to_if(can?(:read, learning_plea.list), learning_plea.list, list_path(learning_plea.list))
            = render(list.add(link_to_list)) do
              %div
              - if can? :edit, learning_plea
                .ml-4.flex-shrink-0
                  = button_to t('actions.remove'), learning_group_learning_plea_path(@learning_group, learning_plea), method: :delete, class: 'button'
